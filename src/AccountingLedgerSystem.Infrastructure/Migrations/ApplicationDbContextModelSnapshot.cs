// <auto-generated />
using System;
using AccountingLedgerSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountingLedgerSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccountingLedgerSystem.Core.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Raw materials held for production",
                            Name = "Raw Materials",
                            Type = 1
                        },
                        new
                        {
                            Id = 101,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Goods in the production process",
                            Name = "Work In Progress",
                            Type = 1
                        },
                        new
                        {
                            Id = 102,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Completed products ready for sale",
                            Name = "Finished Goods",
                            Type = 1
                        },
                        new
                        {
                            Id = 103,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Goods purchased for resale",
                            Name = "Trading Goods",
                            Type = 1
                        },
                        new
                        {
                            Id = 104,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Materials used for product packaging",
                            Name = "Packing Materials",
                            Type = 1
                        },
                        new
                        {
                            Id = 105,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Spare parts for maintenance",
                            Name = "Store & Spare parts",
                            Type = 1
                        },
                        new
                        {
                            Id = 106,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Inventory in shipment",
                            Name = "Goods in Transit",
                            Type = 1
                        },
                        new
                        {
                            Id = 107,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Office stationery supplies",
                            Name = "Stationery Items",
                            Type = 1
                        },
                        new
                        {
                            Id = 108,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Consumable supplies",
                            Name = "Consumable Items",
                            Type = 1
                        },
                        new
                        {
                            Id = 200,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Current portion of long-term debt and short-term borrowings",
                            Name = "Short Term Loan",
                            Type = 2
                        },
                        new
                        {
                            Id = 201,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Amounts owed to suppliers for goods/services purchased on credit",
                            Name = "Trade Payable",
                            Type = 2
                        },
                        new
                        {
                            Id = 202,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Outstanding tax and value-added tax liabilities",
                            Name = "Tax & VAT Payable",
                            Type = 2
                        },
                        new
                        {
                            Id = 203,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Estimated liabilities and accrued expenses",
                            Name = "Provision & Accrual",
                            Type = 2
                        },
                        new
                        {
                            Id = 300,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Ordinary share capital at nominal value",
                            Name = "Share Capital",
                            Type = 3
                        },
                        new
                        {
                            Id = 301,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Amount received above nominal share value",
                            Name = "Share Premium",
                            Type = 3
                        },
                        new
                        {
                            Id = 302,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cumulative net earnings not distributed as dividends",
                            Name = "Retained Earnings",
                            Type = 3
                        },
                        new
                        {
                            Id = 304,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Initial balance when setting up accounting system",
                            Name = "Opening Balance Equity",
                            Type = 3
                        },
                        new
                        {
                            Id = 400,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Primary revenue from core business operations",
                            Name = "Operating Revenue",
                            Type = 4
                        },
                        new
                        {
                            Id = 401,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Income generated from branch operations",
                            Name = "Revenue from Branch",
                            Type = 4
                        },
                        new
                        {
                            Id = 402,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Business-to-business sales income",
                            Name = "Revenue from B2B",
                            Type = 4
                        },
                        new
                        {
                            Id = 403,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Online sales through electronic channels",
                            Name = "E-Commerce Revenue",
                            Type = 4
                        },
                        new
                        {
                            Id = 500,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Direct costs of materials and outsourced services",
                            Name = "Material and Service Cost",
                            Type = 5
                        },
                        new
                        {
                            Id = 501,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "All costs associated with branch operations",
                            Name = "Branch Operation Expenses",
                            Type = 5
                        },
                        new
                        {
                            Id = 502,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Indirect manufacturing costs",
                            Name = "Factory Overhead",
                            Type = 5
                        },
                        new
                        {
                            Id = 503,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Costs related to transaction settlements",
                            Name = "Settling Expenses",
                            Type = 5
                        });
                });

            modelBuilder.Entity("AccountingLedgerSystem.Core.Entities.JournalEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("JournalEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Initial capital injection"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 20, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Purchase of inventory"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 25, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sales revenue"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 31, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Month-end adjustments"
                        });
                });

            modelBuilder.Entity("AccountingLedgerSystem.Core.Entities.JournalEntryLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("JournalEntryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("JournalEntryId");

                    b.ToTable("JournalEntryLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 101,
                            CreatedAt = new DateTime(2025, 1, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Credit = 0.00m,
                            Debit = 10000.00m,
                            JournalEntryId = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 301,
                            CreatedAt = new DateTime(2025, 1, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Credit = 10000.00m,
                            Debit = 0.00m,
                            JournalEntryId = 1
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 102,
                            CreatedAt = new DateTime(2025, 1, 20, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Credit = 0.00m,
                            Debit = 5000.00m,
                            JournalEntryId = 2
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 101,
                            CreatedAt = new DateTime(2025, 1, 20, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Credit = 5000.00m,
                            Debit = 0.00m,
                            JournalEntryId = 2
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 101,
                            CreatedAt = new DateTime(2025, 1, 25, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            Credit = 0.00m,
                            Debit = 3000.00m,
                            JournalEntryId = 3
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 401,
                            CreatedAt = new DateTime(2025, 1, 25, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            Credit = 3000.00m,
                            Debit = 0.00m,
                            JournalEntryId = 3
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 501,
                            CreatedAt = new DateTime(2025, 1, 31, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Credit = 0.00m,
                            Debit = 1000.00m,
                            JournalEntryId = 4
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 203,
                            CreatedAt = new DateTime(2025, 1, 31, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Credit = 1000.00m,
                            Debit = 0.00m,
                            JournalEntryId = 4
                        });
                });

            modelBuilder.Entity("AccountingLedgerSystem.Core.Entities.JournalEntryLine", b =>
                {
                    b.HasOne("AccountingLedgerSystem.Core.Entities.Account", "Account")
                        .WithMany("JournalEntryLines")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AccountingLedgerSystem.Core.Entities.JournalEntry", "JournalEntry")
                        .WithMany("JournalEntryLines")
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("JournalEntry");
                });

            modelBuilder.Entity("AccountingLedgerSystem.Core.Entities.Account", b =>
                {
                    b.Navigation("JournalEntryLines");
                });

            modelBuilder.Entity("AccountingLedgerSystem.Core.Entities.JournalEntry", b =>
                {
                    b.Navigation("JournalEntryLines");
                });
#pragma warning restore 612, 618
        }
    }
}
